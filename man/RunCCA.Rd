% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/dimensional_reduction.R
\name{RunCCA}
\alias{RunCCA}
\alias{RunCCA.default}
\alias{RunCCA.Seurat}
\title{Perform Canonical Correlation Analysis}
\usage{
RunCCA(object1, object2, ...)

\method{RunCCA}{default}(object1, object2, standardize = TRUE,
  num.cc = 20, verbose = FALSE, use.cpp = TRUE, ...)

\method{RunCCA}{Seurat}(object1, object2, group1, group2,
  group.by = "group", num.cc = 20, features = NULL,
  renormalize = FALSE, rescale = FALSE, compute.gene.loadings = TRUE,
  add.cell.id1 = NULL, add.cell.id2 = NULL, verbose = TRUE,
  use.cpp = TRUE, ...)
}
\arguments{
\item{object1}{First Seurat object}

\item{object2}{Second Seurat object.}

\item{...}{Extra parameters (passed onto MergeSeurat in case with two objects
passed, passed onto ScaleData in case with single object and rescale.groups
set to TRUE)}

\item{standardize}{Standardize matrices - scales columns to have unit variance
and mean 0}

\item{num.cc}{Number of canonical vectors to calculate}

\item{verbose}{...}

\item{use.cpp}{...}

\item{group1}{First set of cells (or IDs) for CCA}

\item{group2}{Second set of cells (or IDs) for CCA}

\item{group.by}{Factor to group by (column vector stored in object@meta.data), Defaults to "group".}

\item{add.cell.id1, add.cell.id2}{arguments to pass to MergeSeurat (if group.by not given)}

\item{object}{Seurat object (after running FilterCells, NormalizeData)}

\item{object2}{Optional second object. If object2 is passed, object1 will be
considered as group1 and object2 as group2.}

\item{num.cc}{Number of canonical vectors to calculate}

\item{genes.use}{Set of genes to use in CCA. Default is object@var.genes. If
two objects are given, the default is the union of both variable gene sets
that are also present in both objects.}

\item{scale.data}{Use the scaled data from the object (requires ScaleData to be run)}

\item{rescale.groups}{Rescale each set of cells independently}
}
\value{
Returns a combined Seurat object with the CCA results stored.
}
\description{
Runs a canonical correlation analysis using a diagonal implementation of CCA.
For details about stored CCA calculation parameters, see
\code{PrintCCAParams}.

Runs a canonical correlation analysis using a diagonal implementation of CCA.
For details about stored CCA calculation parameters, see
\code{PrintCCAParams}.
}
\examples{
pbmc_small
# As CCA requires two datasets, we will split our test object into two just for this example
pbmc1 <- SubsetData(pbmc_small, cells = colnames(x = pbmc_small)[1:40])
pbmc2 <- SubsetData(pbmc_small, cells = colnames(x = pbmc_small)[41:80])
pbmc1[["group"]] <- "group1"
pbmc2[["group"]] <- "group2"
pbmc_cca <- RunCCA(object1 = pbmc1, object2 = pbmc2)
# Print results
print(x = pbmc_cca[["cca"]])

}
\seealso{
\code{\link{merge.Seurat}}
}
